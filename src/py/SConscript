# # -*-python-*-

import os

AddOption('--package',
          dest = 'package',
          type = 'string',
          action = 'store',
          help = 'Package to use for Conda build and install',
          default = ['basic', 'fp17'])

Import("env")
if os.environ.get('pybind11', 'false') == 'false':
    pyenv = env.Clone(tools = ['boost_python'])
else:
    pyenv = env.Clone(tools = ['pybind11'])
          
pyenv['PACKAGE'] = GetOption('package')


if pyenv['PACKAGE'] == 'basic': 
    pyenv.AppendUnique(LIBS  = ['basic'])

    exclude = """
    """.split()

    sources = [source for source in pyenv.Glob('*.*') if source.name not in exclude]

    if os.environ.get('pybind11', 'false') == 'false':
         targets = pyenv.BoostPythonExtension("basic/__basic", sources)
         Alias("py", targets)
         Alias("install", targets)
         pyenv.Depends(targets, "cpp")
    else:
         targets = pyenv.PyBind11Extension("basic/__basic", sources)
         Alias("py", targets)
         Alias("install", targets)
         pyenv.Depends(targets, "cpp")
          
    targets = pyenv.PythonPackage(basic = "basic")
    Alias("py", targets)
    Alias("install", targets)
    pyenv.Depends(targets, "cpp")
else:
    targets = pyenv.PythonPackage(fp17 = "fp17")
    Alias("py", targets)
    Alias("install", targets)
